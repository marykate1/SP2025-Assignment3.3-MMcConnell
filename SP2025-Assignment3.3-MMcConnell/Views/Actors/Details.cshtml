@model SP2025_Assignment3._3_MMcConnell.Models.ActorDetailsVM

@{
    ViewData["Title"] = "Actor Details";
}

<!-- Link to Bootstrap CSS for styling -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />

<div class="container mt-5">
    <h1 class="text-primary text-center mb-4">Actor Details</h1>

    <!-- Actor Information Card -->
    <div class="card shadow-lg mb-4">
        <div class="card-header bg-dark text-white">
            <h4 class="mb-0">Actor Information</h4>
        </div>
        <div class="card-body">
            <div class="row">
                <!-- Actor Image Column -->
                <div class="col-md-4">
                    @if (Model.Actor.ActorImage != null && Model.Actor.ActorImage.Length > 0)
                    {
                        <img src="@Url.Action("GetActorImage", "Actors", new { id = Model.Actor.Id })" class="img-fluid rounded mb-3" alt="@Model.Actor.Name" />
                    }
                    else
                    {
                        <img src="https://via.placeholder.com/150" class="img-fluid rounded mb-3" alt="No image available" />
                    }
                </div>
                <!-- Actor Details Column -->
                <div class="col-md-8">
                    <dl class="row">
                        <dt class="col-sm-4 fw-bold">Name</dt>
                        <dd class="col-sm-8">@Model.Actor.Name</dd>

                        <dt class="col-sm-4 fw-bold">Gender</dt>
                        <dd class="col-sm-8">@Model.Actor.Gender</dd>

                        <dt class="col-sm-4 fw-bold">Age</dt>
                        <dd class="col-sm-8">@Model.Actor.Age</dd>

                        <dt class="col-sm-4 fw-bold">IMDB Link</dt>
                        <dd class="col-sm-8">
                            <a href="@Model.Actor.IMDBLink" target="_blank" class="text-decoration-none">
                                View on IMDB
                            </a>
                        </dd>
                    </dl>
                </div>
            </div>
        </div>
    </div>

    <!-- Overall Sentiment Card -->
    <div class="alert alert-info text-center mb-4">
        <h5 class="mb-0">
            Overall Sentiment: <span class="fw-bold">@Model.OverallSentiment</span>
        </h5>
    </div>

    <!-- Reddit Comments Table Card -->
    <div class="card shadow-lg mb-4">
        <div class="card-header bg-secondary text-white">
            <h4 class="mb-0">Reddit Comments & Analysis</h4>
        </div>
        <div class="card-body">
            <table class="table table-striped table-hover">
                <thead class="thead-dark">
                    <tr>
                        <th>Comment</th>
                        <th>Sentiment</th>
                        <th>Confidence</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var comment in Model.RedditComments)
                    {
                        <tr>
                            <td>@comment.Comment</td>
                            <td>
                                <span class="badge @(comment.Sentiment == "Positive" ? "bg-success" : comment.Sentiment == "Negative" ? "bg-danger" : "bg-warning")">
                                    @comment.Sentiment
                                </span>
                            </td>
                            <td>@comment.Score.ToString("P1")</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- Action Links -->
    <div class="text-center mt-3">
        <a class="btn btn-warning btn-sm" href="@Url.Action("Edit", "Actors", new { id = Model.Actor.Id })">Edit</a>
        <a class="btn btn-warning btn-sm" href="@Url.Action("Index", "Actors")">back to Actor List</a>
    </div>
</div>
